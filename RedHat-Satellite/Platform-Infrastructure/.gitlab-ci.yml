variables:
  TF_VAR_rhn_username: "$RHN_USERNAME"
  TF_VAR_rhn_password: "$RHN_PASSWORD"
  TF_VAR_satellite_pool_id: "$SATELLITE_POOL_ID"
  TF_VAR_private_key_path: "/path/to/your/ssh_key.pem"  # Update with your path or use a GitLab variable

stages:
  - terraform-init
  - terraform-apply
  - ansible-configure

before_script:
  - apt-get update && apt-get install -y unzip python3-pip
  - pip3 install ansible boto3
  - curl -o /usr/local/bin/terraform https://releases.hashicorp.com/terraform/1.0.11/terraform_1.0.11_linux_amd64.zip
  - chmod +x /usr/local/bin/terraform

terraform-init:
  stage: terraform-init
  script:
    - cd terraform
    - terraform init

terraform-apply:
  stage: terraform-apply
  script:
    - cd terraform
    - terraform apply -auto-approve -var="aws_ami_id=$AWS_AMI_ID" -var="instance_type=$INSTANCE_TYPE" -var="key_name=$KEY_NAME" -var="private_key_path=$TF_VAR_private_key_path"
    # Export the Terraform output to generate the inventory file
    - terraform output -json > terraform_output.json
    - jq -r '.satellite_instance_public_ip.value' terraform_output.json > satellite_ip.txt
    - echo "[satellite_server]" > ansible/inventory.ini
    - echo "satellite_server ansible_host=$(cat satellite_ip.txt) ansible_user=ec2-user ansible_ssh_private_key_file=$TF_VAR_private_key_path ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> ansible/inventory.ini

ansible-configure:
  stage: ansible-configure
  script:
    - cd ansible
    - ansible-playbook -i inventory.ini playbooks/install_satellite.yml
